{
  "openapi": "3.0.0",
  "info": {
    "title": "Documentação da API e-commerce da QESH",
    "description": "<h2>Bem vindo à documentação da api do e-commerce da QESH</h2> Este guia vai te ajudar a interagir com os end points desta api!",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ecommerce.pw1.develop.us-east-1.qesh.ai",
      "description": "Servidor de Homologação"
    },
    {
      "url": "http://ecommerce.pw1.develop.us-east-1.qesh.ai",
      "description": "url de desenvolvimento"
    },
    {
      "url": "ecommerce.pw1.develop.us-east-1.qesh.ai",
      "description": "url de desenvolvimento"
    },
    {
      "url": "https://localhost:3001",
      "description": "url de desenvolvimento"
    },
    {
      "url": "http://localhost:3001",
      "description": "url de desenvolvimento"
    },
    {
      "url": "localhost:3001",
      "description": "url de desenvolvimento"
    }
  ],
  "paths": {
    "/v1/refresh-token": {
      "post": {
        "summary": "Renovar o token de acesso do usuario informando o refresh-token",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer Token"
            }
          }
        ],
        "description": "1° Como gerar um refresh_token : Quando um usuario se loga na aplicação duas credencias de acesso são geradas ( token, refresh_token ). <br/> 2° Como renovar o token de acesso: Para renovar um token de acesso o refresh_token deve ser enviado no header da requisição",
        "tags": [
          "AUTH"
        ],
        "responses": {
          "200": {
            "description": "novo token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "new jwt token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "msg: refresh token is required or refresh token is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "msg: refresh token is required or refresh token is invali"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/login-shop-owner": {
      "post": {
        "summary": "Logar Usuário Lojista",
        "description": "Para logar um Lojista, enviar o body com email e senha para autorizacao. <br> tempo de expição: 60 minutos",
        "tags": [
          "AUTH"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_request_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Um Token de acesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "TOKEN DE ACESSO"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request vai ser retornado quando alguma coisa no corpo da requisição veio errado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400-Response-Bad-Request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found será retornado quando as credenciais não forem encontradas no servid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "internal server error - pode acontecer por má formação na requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/login-shopper": {
      "post": {
        "summary": "Logar Usuário Comprador",
        "description": "Para logar um comprador, enviar o body com email e senha para autorizacao. <br> tempo de expição: 60 minutos",
        "tags": [
          "AUTH"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_request_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Um JSON  com as informações do banco",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "ey@#23948235sidufh349fg34fgjwenfg39ouivneijn23952u83jfidng"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "ac01751b-4821-4afd-4ad1-5959e58d73db"
                          },
                          "bank_code": {
                            "type": "string",
                            "example": "655"
                          },
                          "bank_branch": {
                            "type": "string",
                            "example": "1111"
                          },
                          "bank_account": {
                            "type": "string",
                            "example": "6180000000"
                          },
                          "active": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "string",
                      "example": "3dde7624-55ef-3401-5e9c-b0994cf423c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request vai ser retornado quando alguma coisa no corpo da requisição veio errado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400-Response-Bad-Request"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar uma loja ( credencial de IB )",
        "tags": [
          "SHOP"
        ],
        "description": "rota para criar uma loja<br> Observações:<br>a propriedade: <strong>days_store_operation</strong> é um array contendo os dias de funcionamento da loja, ons nomes são <ul><li>SUNDAY</li><li>MONDAY</li><li>TUESDAY</li><li>WEDNESDAY</li><li>THURSDAY</li><li>FRIDAY</li><li>SATURNDAY</li></ul> <br> A propriedade <strong>'address_owner'</strong> pode ser passado os seguintes valores: <br> <ul><li>SHOPPER</li><li>SHOP</li></ul><br> As propriedades: <strong>'document', 'email' e 'url'</strong> devem ser únicas<br> As urls de imagens <strong> img_web e img_mobile</strong> devem ser enviadas pela rota <strong>'/v1/shop/upload/icons'</strong> antes desta rota ser enviada",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "example": "Mackie"
                  },
                  "document": {
                    "type": "string",
                    "example": "0002401309001"
                  },
                  "client_id": {
                    "type": "string",
                    "example": "3cf47c5d-f064-4095-9b03-6f34d559fb4c"
                  },
                  "password": {
                    "type": "string",
                    "example": "1234562789111"
                  },
                  "name": {
                    "type": "string",
                    "example": "Makcie Store"
                  },
                  "email": {
                    "type": "string",
                    "example": "mackie@qesh.ai"
                  },
                  "phone": {
                    "type": "string",
                    "example": "3199328321"
                  },
                  "minimun_purchase": {
                    "type": "number",
                    "example": 13
                  },
                  "start_store_operation": {
                    "type": "string",
                    "example": "312"
                  },
                  "end_store_operation": {
                    "type": "string",
                    "example": "313"
                  },
                  "days_store_operation": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "MONDAY"
                    }
                  },
                  "show_address": {
                    "type": "boolean",
                    "example": false
                  },
                  "show_email": {
                    "type": "boolean",
                    "example": false
                  },
                  "is_closed": {
                    "type": "boolean",
                    "example": false
                  },
                  "primary_color": {
                    "type": "string",
                    "example": "#2222"
                  },
                  "secondary_color": {
                    "type": "string",
                    "example": "#2222"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://mackie.com/"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "example": "rua sei lá"
                      },
                      "number": {
                        "type": "string",
                        "example": "684"
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Bairro Tenso"
                      },
                      "complementary_address": {
                        "type": "string",
                        "example": "fundos"
                      },
                      "city": {
                        "type": "string",
                        "example": "Belo Horizonte"
                      },
                      "state": {
                        "type": "string",
                        "example": "MG"
                      },
                      "zip_code": {
                        "type": "string",
                        "example": "31015-294"
                      },
                      "address_owner": {
                        "type": "string",
                        "example": "SHOPPER"
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  },
                  "img_web": {
                    "type": "string",
                    "example": "https://th.bing.com/th/id/R.bcb381d440cc8c411cbe3cfed5aa4913?rik=mhE4uJNUt6EUyg&pid=ImgRaw&r=0"
                  },
                  "img_mobile": {
                    "type": "string",
                    "example": "https://th.bing.com/th/id/R.1dd190fc2369293cfbcc7295e06a96f2?rik=1hXHmg8hv9v6Gw&riu=http%3a%2f%2fwww.fcmusica.com%2fshop%2ffiles%2fMACKIE_LOGO.jpg&ehk=ng7Uq3s4NF%2fXMGxaOH8IuV1GgkA%2bbf2UTphXkcs9ueo%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "78f394e0-f99d-4b3e-ba68-5d8f99eda7dd"
                    },
                    "client_id": {
                      "type": "string",
                      "example": "bf58d4b8-aceb-4845-9cbf-4e391b37f643"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ms."
                    },
                    "email": {
                      "type": "string",
                      "example": "Chad18@hotmail.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "710-750-0371"
                    },
                    "minimun_purchase": {
                      "type": "number",
                      "example": 53.32
                    },
                    "start_store_operation": {
                      "type": "string",
                      "example": "312"
                    },
                    "end_store_operation": {
                      "type": "string",
                      "example": "312"
                    },
                    "days_store_operation": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "WEDNESDAY",
                        "MONDAY"
                      ]
                    },
                    "show_address": {
                      "type": "boolean",
                      "example": false
                    },
                    "show_email": {
                      "type": "boolean",
                      "example": false
                    },
                    "is_closed": {
                      "type": "boolean",
                      "example": false
                    },
                    "primary_color": {
                      "type": "string",
                      "example": "#2222"
                    },
                    "secondary_color": {
                      "type": "string",
                      "example": "#2222"
                    },
                    "img_web": {
                      "type": "string",
                      "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/2018-12-04%2021-02-00.173.jpg/1662996097933"
                    },
                    "img_mobile": {
                      "type": "string",
                      "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/CQRSES-4.png/1662996097951"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://deborah.name"
                    },
                    "user_owner_id": {
                      "type": "string",
                      "example": "0dacd3ae-2be4-4c57-b4c8-c84c4239f51a"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-11-25T16:19:45.894Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2022-11-25T16:19:45.894Z"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "f82f47d5-c373-46fc-9414-9e9a6c5b6268"
                          },
                          "shopper_id": {
                            "type": "string",
                            "example": null
                          },
                          "shop_id": {
                            "type": "string",
                            "example": "78f394e0-f99d-4b3e-ba68-5d8f99eda7dd"
                          },
                          "street": {
                            "type": "string",
                            "example": "tested"
                          },
                          "number": {
                            "type": "string",
                            "example": "Banana"
                          },
                          "neighborhood": {
                            "type": "string",
                            "example": "tested"
                          },
                          "complementary_address": {
                            "type": "string",
                            "example": "tested"
                          },
                          "city": {
                            "type": "string",
                            "example": "tested"
                          },
                          "state": {
                            "type": "string",
                            "example": "tested"
                          },
                          "zip_code": {
                            "type": "string",
                            "example": "tested"
                          },
                          "address_owner": {
                            "type": "string",
                            "example": "SHOPPER ou SHOP"
                          },
                          "is_active": {
                            "type": "boolean",
                            "example": false
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2022-11-25T16:19:45.894Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2022-11-25T16:19:45.894Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/{shop_id}/{address_id}": {
      "patch": {
        "summary": "Atualizar uma loja ( credencial de lojista ) ",
        "tags": [
          "SHOP"
        ],
        "description": "Rota para atualizar os dados de uma loja.<br> os campos: <br><strong>userName, document, client_id, password e email</strong> não podem ser alterados",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "address_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "kaique"
                  },
                  "phone": {
                    "type": "string",
                    "example": "31993328321"
                  },
                  "minimun_purchase": {
                    "type": "string",
                    "example": "53.32"
                  },
                  "start_store_operation": {
                    "type": "string",
                    "example": "312"
                  },
                  "end_store_operation": {
                    "type": "string",
                    "example": "312"
                  },
                  "days_store_operation": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "WEDNESDAY"
                    }
                  },
                  "show_address": {
                    "type": "boolean",
                    "example": false
                  },
                  "show_email": {
                    "type": "boolean",
                    "example": true
                  },
                  "is_closed": {
                    "type": "boolean",
                    "example": false
                  },
                  "primary_color": {
                    "type": "string",
                    "example": "#2222"
                  },
                  "secondary_color": {
                    "type": "string",
                    "example": "#2222"
                  },
                  "url": {
                    "type": "string",
                    "example": "www.djkaique.com.br"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "example": "rua sei lá"
                      },
                      "number": {
                        "type": "string",
                        "example": "684"
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Bairro Cabuloso"
                      },
                      "complementary_address": {
                        "type": "string",
                        "example": "frentes"
                      },
                      "city": {
                        "type": "string",
                        "example": "Belo Horizonte"
                      },
                      "state": {
                        "type": "string",
                        "example": "BA"
                      },
                      "zip_code": {
                        "type": "string",
                        "example": "31015-294"
                      },
                      "address_owner": {
                        "type": "string",
                        "example": "SHOPPER"
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  },
                  "img_web": {
                    "type": "string",
                    "example": "https://th.bing.com/th/id/R.bcb381d440cc8c411cbe3cfed5aa4913?rik=mhE4uJNUt6EUyg&pid=ImgRaw&r=0"
                  },
                  "img_mobile": {
                    "type": "string",
                    "example": "https://th.bing.com/th/id/R.1dd190fc2369293cfbcc7295e06a96f2?rik=1hXHmg8hv9v6Gw&riu=http%3a%2f%2fwww.fcmusica.com%2fshop%2ffiles%2fMACKIE_LOGO.jpg&ehk=ng7Uq3s4NF%2fXMGxaOH8IuV1GgkA%2bbf2UTphXkcs9ueo%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Pedir um body real": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/upload/icons": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload de Logos ( credencial de lojista ) ",
        "tags": [
          "SHOP"
        ],
        "description": "rota para fazer upload das logos da loja. As imagens não podem ultrapassar 65335 KB. <br>As duas imagens são <strong>obrigatórias</strong><br> As imagens são os campos <strong>web e mobile</strong> em um campo do tipo multipart/form",
        "requestBody": {
          "required": true,
          "content": {
            "image/web": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/mobile": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "img_web": {
                      "type": "string",
                      "example": "https://clipground.com/images/mackie-logo-7.jpg"
                    },
                    "img_mobile": {
                      "type": "string",
                      "example": "https://clipground.com/images/mackie-logo-7.jpg"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "se o tamanho for maior que o limite de 65335 KB",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/422-Response-Unprocessable_entity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/upload/terms": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload terms",
        "description": "Upload terms to s3",
        "tags": [
          "SHOP"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "example": "UUID of the client",
                    "type": "string"
                  },
                  "content": {
                    "example": "Markdown content",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Markdown saved on s3 sucefully"
          },
          "500": {
            "description": "Something went very wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/terms/{client_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get terms of service",
        "description": "Get terms of service on s3",
        "tags": [
          "SHOP"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "client_id",
            "description": "UUID of the client",
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the term file content",
            "content": {
              "text/markdown": {
                "schema": {
                  "type": "string",
                  "example": "Markdown content"
                }
              }
            }
          },
          "404": {
            "description": "Term of Service not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "error: term not found"
                      }
                    },
                    "code": {
                      "type": "string",
                      "example": "error.shop.not_found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/exists/{client_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "SHOP"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "client_id",
            "description": "client id para pesquisar ",
            "schema": {
              "type": "string",
              "example": "UUID client_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "devolve o ID o email e a URL da loja",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "email": {
                      "type": "string",
                      "example": "shop email"
                    },
                    "url": {
                      "type": "string",
                      "example": "shop url"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/find/{url}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "encontrar pela URL",
        "description": "Encontre uma loja através de sua URL",
        "tags": [
          "SHOP"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "url",
            "description": "client id para pesquisar",
            "schema": {
              "type": "string",
              "example": "URL para encontrar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "devolve o ID o email e a URL da loja",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": null
                    },
                    "client_id": {
                      "type": "string",
                      "example": null
                    },
                    "minimun_purchase": {
                      "type": "number",
                      "example": 10
                    },
                    "start_store_operation": {
                      "type": "string",
                      "example": null
                    },
                    "end_store_operation": {
                      "type": "string",
                      "example": null
                    },
                    "days_store_operation": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "MONDAY"
                      }
                    },
                    "show_address": {
                      "type": "boolean",
                      "example": true
                    },
                    "show_email": {
                      "type": "boolean",
                      "example": true
                    },
                    "is_closed": {
                      "type": "boolean",
                      "example": false
                    },
                    "primary_color": {
                      "type": "string",
                      "example": "fffffff"
                    },
                    "secondary_color": {
                      "type": "string",
                      "example": "F7F7F7"
                    },
                    "img_web?": {
                      "type": "string",
                      "example": "LINK para img"
                    },
                    "img_mobile?": {
                      "type": "string",
                      "example": "LINK para mobile img"
                    },
                    "url?": {
                      "type": "string",
                      "example": "www.urldaloja.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/find/by/{store_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "find by store_id",
        "description": "rota para listar todos os items de protudos ( usar na pagina de adicionar produtos em destaque ).",
        "tags": [
          "SHOP"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "store_id",
            "description": "store_id para pesquisar",
            "schema": {
              "type": "string",
              "example": "Id da Loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "78f394e0-f99d-4b3e-ba68-5d8f99eda7dd"
                    },
                    "client_id": {
                      "type": "string",
                      "example": "bf58d4b8-aceb-4845-9cbf-4e391b37f643"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ms."
                    },
                    "email": {
                      "type": "string",
                      "example": "Chad18@hotmail.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "710-750-0371"
                    },
                    "minimun_purchase": {
                      "type": "number",
                      "example": 53.32
                    },
                    "start_store_operation": {
                      "type": "string",
                      "example": "312"
                    },
                    "end_store_operation": {
                      "type": "string",
                      "example": "312"
                    },
                    "days_store_operation": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "WEDNESDAY",
                        "MONDAY"
                      ]
                    },
                    "show_address": {
                      "type": "boolean",
                      "example": false
                    },
                    "show_email": {
                      "type": "boolean",
                      "example": false
                    },
                    "is_closed": {
                      "type": "boolean",
                      "example": false
                    },
                    "primary_color": {
                      "type": "string",
                      "example": "#2222"
                    },
                    "secondary_color": {
                      "type": "string",
                      "example": "#2222"
                    },
                    "img_web": {
                      "type": "string",
                      "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/2018-12-04%2021-02-00.173.jpg/1662996097933"
                    },
                    "img_mobile": {
                      "type": "string",
                      "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/CQRSES-4.png/1662996097951"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://deborah.name"
                    },
                    "user_owner_id": {
                      "type": "string",
                      "example": "0dacd3ae-2be4-4c57-b4c8-c84c4239f51a"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-11-25T16:19:45.894Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2022-11-25T16:19:45.894Z"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "f82f47d5-c373-46fc-9414-9e9a6c5b6268"
                          },
                          "shopper_id": {
                            "type": "string",
                            "example": null
                          },
                          "shop_id": {
                            "type": "string",
                            "example": "78f394e0-f99d-4b3e-ba68-5d8f99eda7dd"
                          },
                          "street": {
                            "type": "string",
                            "example": "tested"
                          },
                          "number": {
                            "type": "string",
                            "example": "Banana"
                          },
                          "neighborhood": {
                            "type": "string",
                            "example": "tested"
                          },
                          "complementary_address": {
                            "type": "string",
                            "example": "tested"
                          },
                          "city": {
                            "type": "string",
                            "example": "tested"
                          },
                          "state": {
                            "type": "string",
                            "example": "tested"
                          },
                          "zip_code": {
                            "type": "string",
                            "example": "tested"
                          },
                          "address_owner": {
                            "type": "string",
                            "example": "SHOPPER ou SHOP"
                          },
                          "is_active": {
                            "type": "boolean",
                            "example": false
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2022-11-25T16:19:45.894Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2022-11-25T16:19:45.894Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/find/clients/{shop_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Listar todos os clientes compradores por loja",
        "description": "rota para listar todos os clientes da loja.",
        "tags": [
          "SHOP"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pagina para buscar"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "paginação da busca"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Opções ->  'name' 'created_at'",
            "required": false,
            "schema": {
              "enum": [
                "name",
                "created_at"
              ],
              "example": "oscolher uma das opções"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1f0db51a-853f-11ed-a1eb-0242ac120002"
                      },
                      "name": {
                        "type": "string",
                        "example": "Fulano de tal"
                      },
                      "document": {
                        "type": "string",
                        "example": "92738457210"
                      },
                      "email": {
                        "type": "string",
                        "example": "email@teste.com"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2022-12-26T17:07:57.556Z"
                      },
                      "purchases": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "IN_PROGRESS"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/find/last-acess/hour/{shop_id}": {
      "get": {
        "tags": [
          "SHOP"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Return the number of acess on shop for last hour",
        "description": "Return the number of acess on shop for last hour",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 9
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/find/last-acess/month/{shop_id}": {
      "get": {
        "tags": [
          "SHOP"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Return the number of acess on shop for last month",
        "description": "Return the number of acess on shop for last month",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 134
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/tracking-code/{sale_id}": {
      "post": {
        "summary": "route to add the tracking code in the sale",
        "description": "route to add the tracking code to the sale, change the shipping status of the sale and send a shipping confirmation email",
        "tags": [
          "SALE"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "sale_id",
            "schema": {
              "example": "UUID da venda"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tracking_code": {
                    "type": "string",
                    "example": "NA784568295BR"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SENT": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-sale-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/sales-extract/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "list store extract",
        "description": "rota para listar todas as vendas do extrato da loja",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pagina para buscar"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "paginação da busca"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1f0db51a-853f-11ed-a1eb-0242ac120002"
                      },
                      "status": {
                        "type": "string",
                        "example": "IN_PROGRESS"
                      },
                      "payment_information_id": {
                        "type": "string",
                        "example": "cedd351a-87a6-11ed-a1eb-0242ac120002"
                      },
                      "cashback_amount_used": {
                        "type": "string"
                      },
                      "total_purchase_amount": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2022-12-28T23:50:44.370Z"
                      },
                      "payment_information": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "example": "2022-12-29T19:58:19.334Z"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      },
                      "shoppers": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "fulano de tal"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/sales-historys/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "list sales historys",
        "description": "route to list store sales history",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pagina para buscar"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "paginação da busca"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2024"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SENT"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": true,
            "schema": {
              "type": "string",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2020"
            }
          },
          {
            "in": "query",
            "name": "ordination",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1f0db51a-853f-11ed-a1eb-0242ac120002"
                      },
                      "name": {
                        "type": "string",
                        "example": "nome teste"
                      },
                      "status": {
                        "type": "string",
                        "example": "AWAITING_PAYMENT"
                      },
                      "total_purchase_amount": {
                        "type": "string",
                        "example": 50
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2022-12-28T23:50:44.370Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/last-sales/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "return the sales number of the last 14 days",
        "description": "rota para retornar o numero de vendas dos ultimos 14 dias",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 64
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/order-preparation/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "route that return number of sales in preparation",
        "description": "route that return number of sales in preparation",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "example": 15
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/send-sales/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Route that returns sales already sent",
        "description": "Route that returns sales already sent<br>You can search by <strong>name</strong> or <strong>purchase id</strong>",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2022"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2024"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "example": "fulano da silva"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Fulano de tal"
                      },
                      "status": {
                        "type": "string",
                        "example": "SENT"
                      },
                      "total_purchase_amount": {
                        "type": "number",
                        "example": 165.78
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-01-27T16:11:34.335Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/sales-in-preparation/{shop_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Route that return sales in preparation",
        "description": "Route that return sales in preparation<br>You can search by <strong>name</strong> or <strong>purchase id</strong>",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2022"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "01-01-2024"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "example": "fulano da silva"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Fulano de tal"
                      },
                      "status": {
                        "type": "string",
                        "example": "AWAITING_PAYMENT / IN_PROGRESS"
                      },
                      "total_purchase_amount": {
                        "type": "number",
                        "example": 165.78
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2023-01-27T16:11:34.335Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sale/find/sale-screen/{sale_id}": {
      "get": {
        "tags": [
          "SALE"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Route that return full sales information",
        "description": "Route that return total sale information (address, customer information, purchase information, and sale products)",
        "parameters": [
          {
            "in": "path",
            "name": "sale_id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "purchase": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "purchase_id": {
                            "type": "string",
                            "example": "ac01751b-4821-4afd-4ad1-5959e58d73db"
                          },
                          "sale_status": {
                            "type": "string",
                            "example": "SENT"
                          },
                          "total_purchase_amount": {
                            "type": "number",
                            "example": 57
                          },
                          "purchases_created_at": {
                            "type": "string",
                            "example": "2023-02-17T17:06:15.552Z"
                          },
                          "delivery_amount": {
                            "type": "number",
                            "example": 5
                          },
                          "cashback_amount_used": {
                            "type": "number",
                            "example": 2
                          },
                          "name_shopper": {
                            "type": "string",
                            "example": "Nome teste"
                          },
                          "document": {
                            "type": "string",
                            "example": "12660174610"
                          },
                          "zip_code": {
                            "type": "string",
                            "example": "31950550"
                          },
                          "state": {
                            "type": "string",
                            "example": "Minas Gerais"
                          },
                          "city": {
                            "type": "string",
                            "example": "Belo horizonte"
                          },
                          "neighborhood": {
                            "type": "string",
                            "example": "savassi"
                          },
                          "street": {
                            "type": "string",
                            "example": "rua teste"
                          },
                          "number": {
                            "type": "string",
                            "example": "20"
                          },
                          "payment_status": {
                            "type": "string",
                            "example": "AWAITING_PAYMENT"
                          },
                          "amount_paid": {
                            "type": "number",
                            "example": 23
                          },
                          "payment_created_at": {
                            "type": "string",
                            "example": "2023-02-17T17:06:15.552Z"
                          },
                          "amount": {
                            "type": "number",
                            "example": 345
                          },
                          "payment_information_type": {
                            "type": "string",
                            "example": "QESH_BILLET"
                          }
                        }
                      }
                    },
                    "product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "quantity_purchased": {
                            "type": "number",
                            "example": 0
                          },
                          "product_name": {
                            "type": "string",
                            "example": "Camisa Branca"
                          },
                          "sku": {
                            "type": "string",
                            "example": "QKDO083JSO"
                          },
                          "image_url": {
                            "type": "string",
                            "example": "//teste.imagem.url.com.br"
                          },
                          "description": {
                            "type": "string",
                            "example": "descrição da camisa"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-sale-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/changeStatusClosed/{shop_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Change store opening status",
        "tags": [
          "SHOP"
        ],
        "description": "rota para alterar o estatus de aberto da loja:<br>A propriedade <strong>''status''</strong> pode ser passado os seguintes valores: <br> <ul><li>true: Loja fechada</li><li>false: Loja aberta</li>",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "description": "shop_id para pesquisar",
            "schema": {
              "type": "string",
              "example": "Id da Loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop/passwordConfirm/{shop_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Validate password when updating store",
        "tags": [
          "SHOP"
        ],
        "description": "rota para confirmar a senha na hora de realizar uma alteração na loja",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "description": "shop_id para pesquisar",
            "schema": {
              "type": "string",
              "example": "Id da Loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "teste@1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "criar um usuário Comprador",
        "description": "cria um comprador (SHOPPER) enviando o body",
        "tags": [
          "SHOPPER"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "name"
                  },
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "email": {
                    "type": "string",
                    "example": "email@email.com"
                  },
                  "document": {
                    "type": "string",
                    "example": "09876543212"
                  },
                  "phone": {
                    "type": "string",
                    "example": "31987243446"
                  },
                  "password": {
                    "type": "string",
                    "example": "Senha muito boa"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "senha muito boa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "retorna o objeto criado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "document": {
                      "type": "string",
                      "example": "09876543212"
                    },
                    "phone": {
                      "type": "string",
                      "example": "31987243446"
                    },
                    "password": {
                      "type": "string",
                      "example": "Senha muito boa"
                    },
                    "pre_registration": {
                      "type": "string",
                      "example": "pre_registration_value"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/login-shopper/{shop_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Logar um usuário comprador",
        "description": "no body enviar as informações de login",
        "tags": [
          "SHOPPER"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "rafael.victor@qesh.ai"
                  },
                  "password": {
                    "type": "string",
                    "example": "@Eterno_6x1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK retorna um token de acesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "TOKEN de acesso"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/send-code-shopper": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "enviar codigo ao comprador",
        "description": "através do email, enviar um codigo de verificação ao usuário comprador(shopper)",
        "tags": [
          "SHOPPER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "emaildealguem@dominio.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK retorna um token de acesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "menssagem de retorno"
                    },
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/confirmation-code/send": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "confirmar o codigo do comprador",
        "description": "confirma se o codigo inserido foi o mesmo recebido pelo email",
        "tags": [
          "SHOPPER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "UUID user_id"
                  },
                  "code": {
                    "type": "string",
                    "example": "Codigo de confirmação recebido pelo comprador"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "recebe um Token de acesso temporario para poder efetuar as ações necessárias",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "confirmed": {
                      "type": "boolean",
                      "example": true
                    },
                    "temporaryAccessToken": {
                      "type": "string",
                      "example": "TOKEN"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Código inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-INVALIDCODE"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/update-password": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "atualizar a senha do comprador",
        "description": "atualiza a senha de um comprador",
        "tags": [
          "SHOPPER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassoword": {
                    "type": "string",
                    "example": "Nova Senha"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "a mesma nova senha"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "retorna o shopper atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "document": {
                      "type": "string",
                      "example": "09876543212"
                    },
                    "phone": {
                      "type": "string",
                      "example": "31987243446"
                    },
                    "password": {
                      "type": "string",
                      "example": "undefined"
                    },
                    "pre_registration": {
                      "type": "string",
                      "example": "pre_registration_value"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/clients/details/{shopper_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Listar dados do cliente",
        "description": "rota para listar todos os dados do cliente.",
        "tags": [
          "SHOPPER"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopper_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID do cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1f0db51a-853f-11ed-a1eb-0242ac120002"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "bc02c4ba-6fd5-4538-9bad-e5a557c8985a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Fulano de tal"
                    },
                    "document": {
                      "type": "string",
                      "example": "92738457210"
                    },
                    "email": {
                      "type": "string",
                      "example": "email@teste.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": 31997042927
                    },
                    "pre_registration": {
                      "type": "boolean",
                      "example": false
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-12-26T17:07:57.556Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2022-12-28T23:46:18.891Z"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string",
                            "example": "rua sei lá"
                          },
                          "city": {
                            "type": "string",
                            "example": "Belo Horizonte"
                          },
                          "state": {
                            "type": "string",
                            "example": "MG"
                          },
                          "zip_code": {
                            "type": "string",
                            "example": "31015-294"
                          },
                          "complementary_address": {
                            "type": "string",
                            "example": "fundos"
                          },
                          "neighborhood": {
                            "type": "string",
                            "example": "Bairro Tenso"
                          },
                          "address_owner": {
                            "type": "string",
                            "example": "SHOPPER"
                          }
                        }
                      }
                    },
                    "purchases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "IN_PROGRESS"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/send/code": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "enviar código de confirmação",
        "description": "para enviar um código de confirmação, envie o email do lojista",
        "tags": [
          "SHOP OWNER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email@pra.enviar.o.codigo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "recebe uma mensagem e um id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "message": {
                      "type": "string",
                      "example": "menssagem sobre o envio"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/confirm/code/{user_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "confirmar se o codigo confere",
        "description": "confirmar se o codigo digitado pelo lojista confere com o enviado pela API",
        "tags": [
          "SHOP OWNER"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID do lojista"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "codigo enviado ao lojista para corfirmar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "recebe uma mensagem e um id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "confirmed": {
                      "type": "boolean",
                      "example": true
                    },
                    "temporaryAccessToken": {
                      "type": "string",
                      "example": "Token de acesso temporario"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden ou invalid code retornarão 403. Gentileza observar a menssagem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/update/password": {
      "put": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "atualizar a senha",
        "description": "para atualizar a senha do lojista, enviar a nova senha e a confirmação da nova senha'",
        "tags": [
          "SHOP OWNER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "example": "nova senha"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "nova senha igual a nova senha"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna um novo lojista",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": "Nome do lojista"
                    },
                    "document": {
                      "type": "string",
                      "example": "CPF ou CNPJ do Lojista"
                    },
                    "email": {
                      "type": "string",
                      "example": " email@do.lojista"
                    },
                    "password": {
                      "type": "string",
                      "example": "senha forte"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden ou invalid code retornarão 403. Gentileza observar a menssagem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/auth": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "logar um lojista",
        "description": "para logar um lojista, enviar email e senha",
        "tags": [
          "SHOP OWNER"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email para verificar"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha para verificar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna um novo lojista",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "token": {
                      "type": "string",
                      "example": "Token de acesso"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden ou invalid code retornarão 403. Gentileza observar a menssagem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/change/email/{shop_id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "SHOP OWNER"
        ],
        "summary": "Mudar o email ( credencial de lojista )",
        "description": "para mudar o email mande o email novo no body junto com a senha atual do usuário",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newEmail": {
                    "type": "string",
                    "example": "novo@mail.com"
                  },
                  "confirmEmail": {
                    "type": "string",
                    "example": "novo@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha tensa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id?": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": "nome"
                    },
                    "document": {
                      "type": "string",
                      "example": "09876543212"
                    },
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "password?": {
                      "type": "string",
                      "example": "s3nh4f0r73"
                    },
                    "created_at?": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at?": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shop_owner/change/password": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "SHOP OWNER"
        ],
        "summary": "Mudar a senha ( credencial de lojista )",
        "description": "para mudar a senha mande a senha nova no body<br>Note que este método é para alterar a senha usando a senha antiga, que deve ser incluída junto do body",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "example": "nova senha tensa"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "nova senha tensa"
                  },
                  "password": {
                    "type": "string",
                    "example": "velha senha não muito tensa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id?": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "name": {
                      "type": "string",
                      "example": "nome"
                    },
                    "document": {
                      "type": "string",
                      "example": "09876543212"
                    },
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "password?": {
                      "type": "string",
                      "example": "s3nh4f0r73"
                    },
                    "created_at?": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at?": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/manage-stock/getAllProducts/{shop_id}": {
      "get": {
        "tags": [
          "MANAGE STOCK"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "listar todos os produtos no estoque ( credencial de lojista )",
        "description": "Opções para o 'orderBy'<ul><li>ACTIVE</li><li>INACTIVE</li><li>category</li><li>subcategory</li><li>name</li><li>created_at</li></ul>",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pagina para buscar"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "example": "paginação da busca"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Opções -> 'ACTIVE' 'INACTIVE' 'category' 'subcategory' 'name' 'created_at'",
            "required": false,
            "schema": {
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "category",
                "subcategory",
                "name",
                "created_at"
              ],
              "example": "oscolher uma das opções"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "shop_id": {
                      "type": "string"
                    },
                    "subcategory_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "WEDNESDAY",
                        "MONDAY"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/manage-stock/getAllProductsItems/{product_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "busca todos os product items ( credencial de lojista )",
        "tags": [
          "MANAGE STOCK"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID do product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "shop_id": {
                      "type": "string"
                    },
                    "subcategory_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "status": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "WEDNESDAY",
                        "MONDAY"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "MANAGE STOCK"
        ],
        "summary": "modifica a quantidade de produtos em estoque",
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID do product"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newStock": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna um product item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": null
                    },
                    "products_id": {
                      "type": "string",
                      "example": "string"
                    },
                    "name": {
                      "type": "string",
                      "example": "string"
                    },
                    "sku": {
                      "type": "string",
                      "example": "string"
                    },
                    "amount": {
                      "type": "number",
                      "example": 2
                    },
                    "unit_type": {
                      "type": "object",
                      "properties": {
                        "UN": {
                          "type": "string",
                          "example": "UN"
                        },
                        "KG": {
                          "type": "string",
                          "example": "KG"
                        }
                      }
                    },
                    "minimum_item_measurement": {
                      "type": "number",
                      "example": 1
                    },
                    "minimum_item_purchase": {
                      "type": "number",
                      "example": 1
                    },
                    "cashback": {
                      "type": "string",
                      "example": "string"
                    },
                    "cashback_type": {
                      "type": "object",
                      "properties": {
                        "NO_CASHBACK": {
                          "type": "string",
                          "example": "NO_CASHBACK"
                        },
                        "PERCENTAGE": {
                          "type": "string",
                          "example": "PERCENTAGE"
                        }
                      }
                    },
                    "cashback_due_date": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "total_stock": {
                      "type": "number",
                      "example": 30
                    },
                    "stock_minimum": {
                      "type": "number",
                      "example": 0
                    },
                    "is_favorite": {
                      "type": "boolean",
                      "example": false
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "ACTIVE": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "INACTIVE": {
                          "type": "string",
                          "example": "INACTIVE"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar uma categoria  ( credencial de lojista ) ",
        "tags": [
          "PRODUCT CATEGORY"
        ],
        "description": "Para criar uma categoria, deve-se enviar no body da requisição o nome da categoria e a id de uma loja",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "informática"
                  },
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "criado retorna uma category"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Obter lista de categorias de produtos",
        "tags": [
          "PRODUCT CATEGORY"
        ],
        "description": "Para obter a lista de categorias existentes, deve-se passar pelo path e pela query as seguintes variaveis:<br> no path, deve-se passar o <strong>UUID</strong> da loja.<br>na query tem que passar de forma obrigatória as seguintes variaveis: <br><strong> page</strong> para escolher a paginação (número inteiro) cada página apresenta 8 itens, <br><strong>orderby</strong> para escolher de que forma vai ordenar. as opções de ordenação são: <ul><li>name</li><li>created_at</li></ul> <br>e opcionalmente poderá passar a variavel <strong>direction</strong> com as seguintes opções: <ul><li>asc</li><li>desc</li></ul>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "orderby",
            "required": true,
            "schema": {
              "type": "string",
              "example": "name or created_at"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "type": "string",
              "example": "asc or desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um array de  <categorie>"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualizar o nome de uma categoria  ( credencial de lojista )",
        "tags": [
          "PRODUCT CATEGORY"
        ],
        "description": "Para atualizar o nome de uma categoria, deve-se enviar no path, o id da categoria a ser atualizada e no body da requisição, o nome da categoria ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "computadores"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um objeto de <categorie> com o nome atualizado"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletar uma categoria  ( credencial de lojista )",
        "tags": [
          "PRODUCT CATEGORY"
        ],
        "description": "Para deletar uma categoria, deve-se enviar no path, o id da categoria a ser deletada",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subcategories": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar uma subcategoria  ( credencial de lojista )",
        "tags": [
          "PRODUCT SUBCATEGORY"
        ],
        "description": "Para criar uma subcategoria, deve-se enviar no body da requisição o nome da subcategoria e a id de uma categoria",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "HDD"
                  },
                  "category_id": {
                    "type": "string",
                    "example": "UUID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "criado retorna uma sub_category"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subcategories/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Obter lista de subcategorias de produtos",
        "tags": [
          "PRODUCT SUBCATEGORY"
        ],
        "description": "Para obter a lista de subcategorias existentes, deve-se passar pelo path e pela query as seguintes variaveis:<br> no path, deve-se passar o <strong>UUID</strong> da categoria.<br>na query tem que passar de forma obrigatória as seguintes variaveis: <br><strong> page</strong> para escolher a paginação (número inteiro) cada página apresenta 8 itens, <br><strong>orderby</strong> para escolher de que forma vai ordenar. as opções de ordenação são: <ul><li>name</li><li>created_at</li></ul> <br>e opcionalmente poderá passar a variavel <strong>direction</strong> com as seguintes opções: <ul><li>asc</li><li>desc</li></ul>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da categoria raíz"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "number",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "orderby",
            "required": true,
            "schema": {
              "type": "string",
              "example": "name or created_at"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "type": "string",
              "example": "asc or desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um array de  <sub_categorie>"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualizar o nome de uma subcategoria",
        "tags": [
          "PRODUCT SUBCATEGORY"
        ],
        "description": "Para atualizar o nome de uma subcategoria, deve-se enviar no path, o id da subcategoria a ser atualizada e no body da requisição, o nome da subcategoria ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SSD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um objeto de <categorie> com o nome atualizado"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletar uma subcategoria",
        "tags": [
          "PRODUCT SUBCATEGORY"
        ],
        "description": "Para deletar uma subcategoria, deve-se enviar no path, o id da subcategoria a ser deletada",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-variations/{shop_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar uma variação de produto (product variation)",
        "tags": [
          "PRODUCT VARIATION"
        ],
        "description": "Para criar uma variação de produto, deve-se enviar no body da requisição uma descrição da variação de produto e a id de uma loja",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Descrição da variação"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "criado retorna uma product variation"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Obter lista de variações de produto (product variation)",
        "tags": [
          "PRODUCT VARIATION"
        ],
        "description": "Para obter a lista de variação de produto(product variation) deve-se passar pelo path, o id da loja (shop_id)",
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um array de  <sub_categorie>"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-variations/{id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualizar o nome de uma variação de produto (product variation)",
        "tags": [
          "PRODUCT VARIATION"
        ],
        "description": "Para atualizar a descrição de uma variação de produto, deve-se enviar no body, o id da variação a ser atualizada e a nova descrição",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da loja"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "decription": {
                    "type": "string",
                    "example": "nova descrição"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um objeto de <categorie> com o nome atualizado"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletar uma variação de produto (product variation)",
        "tags": [
          "PRODUCT VARIATION"
        ],
        "description": "Para deletar uma variação de produto, deve-se enviar no path, o id da variação de produto a ser deletada.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-variations-options/{product_variation_id}": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar uma variação de produto (product variation) |  ( credencial de lojista )",
        "tags": [
          "PRODUCT VARIATION OPTIONS"
        ],
        "description": "Para criar uma opão variação de produto, deve-se enviar no body da requisição uma descrição da variação de produto e a id de uma loja",
        "parameters": [
          {
            "in": "path",
            "name": "product_variation_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da variação de produto"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Descrição da opão de variação"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "criado retorna uma product variation option"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Obter lista de opção de variações de produto (product variation option)",
        "tags": [
          "PRODUCT VARIATION OPTIONS"
        ],
        "description": "Para obter a lista de opção de variação de produto(product variation option) deve-se passar pelo path, o id da loja (shop_id)",
        "parameters": [
          {
            "in": "path",
            "name": "product_variation_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da variação de produto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um array de product_variations_options"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-variations-options/{id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualizar o nome de uma opção de variação de produto (product variation option) |  ( credencial de lojista )",
        "tags": [
          "PRODUCT VARIATION OPTIONS"
        ],
        "description": "Para atualizar a descrição de uma opção de variação de produto, deve-se enviar no body, o id da variação de produto a ser atualizada e a nova descrição",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "decription": {
                    "type": "string",
                    "example": "nova descrição"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um objeto com o descrição atualizada"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletar uma opção de variação de produto (product variation)",
        "tags": [
          "PRODUCT VARIATION OPTIONS"
        ],
        "description": "Para deletar uma opção de variação de produto, deve-se enviar no path, o id da opção de variação de produto a ser deletada.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retornará um boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Criar um produto  ( credencial de lojista )",
        "tags": [
          "PRODUCT"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "d1e90c98-3d9d-4945-b60f-c4c98fd9a932"
                  },
                  "subcategory_id": {
                    "type": "string",
                    "example": "767f1aa6-4cd9-4e61-bb26-2987a87fcfee"
                  },
                  "product_variation_option_id": {
                    "type": "string",
                    "example": "237f1aa6-6d4d-35e2-b253-2987a87fcfwe"
                  },
                  "name": {
                    "type": "string",
                    "example": "kaique"
                  },
                  "description": {
                    "type": "string",
                    "example": "tested"
                  },
                  "details": {
                    "type": "string",
                    "example": "tested"
                  },
                  "status": {
                    "type": "string",
                    "example": "ACTIVE or INACTIVE"
                  },
                  "product_items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "kaique mendes"
                        },
                        "amount": {
                          "type": "number",
                          "example": 123
                        },
                        "cashback_type": {
                          "type": "string",
                          "example": "PERCENTAGE"
                        },
                        "total_stock": {
                          "type": "number",
                          "example": 3123
                        },
                        "status": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "unit_type": {
                          "type": "string",
                          "example": "UN"
                        },
                        "cashback_due_date": {
                          "type": "string",
                          "example": "2022-10-24 19:14:18"
                        },
                        "minimum_item_measurement": {
                          "type": "number",
                          "example": 10
                        },
                        "minimum_item_purchase": {
                          "type": "number",
                          "example": 10
                        },
                        "shipping_packaging_height": {
                          "type": "number",
                          "example": 8.7
                        },
                        "shipping_packaging_width": {
                          "type": "number",
                          "example": 4.5
                        },
                        "shipping_packaging_length": {
                          "type": "number",
                          "example": 2
                        },
                        "shipping_packaging_type": {
                          "type": "string",
                          "example": "BOX or ENVELOPE or CYLINDER"
                        },
                        "images": {
                          "type": "object",
                          "properties": {
                            "main_image": {
                              "type": "string",
                              "example": "base64 string"
                            },
                            "image_1": {
                              "type": "string",
                              "example": "base64 string"
                            },
                            "image_2": {
                              "type": "string",
                              "example": "base64 string"
                            },
                            "image_3": {
                              "type": "string",
                              "example": "base64 string"
                            },
                            "image_4": {
                              "type": "string",
                              "example": "base64 string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop_id": {
                      "type": "string",
                      "example": "d1e90c98-3d9d-4945-b60f-c4c98fd9a932"
                    },
                    "subcategory_id": {
                      "type": "string",
                      "example": "767f1aa6-4cd9-4e61-bb26-2987a87fcfee"
                    },
                    "name": {
                      "type": "string",
                      "example": "kaique"
                    },
                    "description": {
                      "type": "string",
                      "example": "tested"
                    },
                    "details": {
                      "type": "string",
                      "example": "tested"
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product/{product_id}": {
      "put": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "atualizar um produto  ( credencial de lojista ) ",
        "tags": [
          "PRODUCT"
        ],
        "description": "description",
        "parameters": [
          {
            "in": "path",
            "name": "product_id",
            "example": "Product_id UUID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da variação de produto"
            }
          }
        ],
        "requestBody": {
          "description": "troque os valores das seguintes propiedades para atualizar o produto",
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subcategory_id": {
                    "type": "string",
                    "example": "767f1aa6-4cd9-4e61-bb26-2987a87fcfee"
                  },
                  "name": {
                    "type": "string",
                    "example": "kaique"
                  },
                  "description": {
                    "type": "string",
                    "example": "tested"
                  },
                  "details": {
                    "type": "string",
                    "example": "tested"
                  },
                  "status": {
                    "type": "string",
                    "example": "ACTIVE"
                  },
                  "product_items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "87422d83-c864-41e7-b83a-f3021474f2a1"
                        },
                        "name": {
                          "type": "string",
                          "example": "kaique mendes"
                        },
                        "amount": {
                          "type": "number",
                          "example": 111111111
                        },
                        "cashback_type": {
                          "type": "string",
                          "example": "PERCENTAGE"
                        },
                        "total_stock": {
                          "type": "number",
                          "example": 55
                        },
                        "status": {
                          "type": "string",
                          "example": "ACTIVE or INACTIVE"
                        },
                        "unit_type": {
                          "type": "string",
                          "example": "UN"
                        },
                        "cashback_due_date": {
                          "type": "string",
                          "example": "2022-10-29 19:14:18"
                        },
                        "minimum_item_measurement": {
                          "type": "number",
                          "example": 10
                        },
                        "imagesItem": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "1f7f54d2-cf86-4631-abc4-d97494f7116b"
                              },
                              "image": {
                                "type": "string",
                                "example": "base64 string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um produto atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop_id": {
                      "type": "string",
                      "example": "d1e90c98-3d9d-4945-b60f-c4c98fd9a932"
                    },
                    "subcategory_id": {
                      "type": "string",
                      "example": "767f1aa6-4cd9-4e61-bb26-2987a87fcfee"
                    },
                    "name": {
                      "type": "string",
                      "example": "kaique"
                    },
                    "description": {
                      "type": "string",
                      "example": "tested"
                    },
                    "details": {
                      "type": "string",
                      "example": "tested"
                    },
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product/find/sub-category/{shop_id}/{sub_category_id}": {
      "get": {
        "summary": "Listar produtos de uma mesma subcategoria",
        "description": "rota para listar todos os produtos da loja com a mesma subcategoria",
        "tags": [
          "PRODUCT"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shop_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID do cliente"
            }
          },
          {
            "in": "path",
            "name": "sub_category_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "UUID da subcategoria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Produto teste"
                      },
                      "description": {
                        "type": "string",
                        "example": "descrição teste"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      },
                      "subcategories": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "subcategoria teste"
                          }
                        }
                      },
                      "product_items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "nome teste"
                            },
                            "amount": {
                              "type": "number",
                              "example": 52.9
                            },
                            "status": {
                              "type": "string",
                              "example": "ACTIVE"
                            },
                            "total_stock": {
                              "type": "number",
                              "example": 3101
                            },
                            "sku": {
                              "type": "string"
                            },
                            "cashback": {
                              "type": "string"
                            },
                            "cashback_type": {
                              "type": "string",
                              "example": "PERCENTAGE"
                            },
                            "unit_type": {
                              "type": "string",
                              "example": "UN"
                            },
                            "product_items_images": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "image_url": {
                                    "type": "string",
                                    "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/1673414404695"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping-regions": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "criar região de frete |  ( credencial de lojista )",
        "description": "para criar uma região de frete, enviar este body",
        "tags": [
          "SHIPPING-REGION"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "state": {
                    "type": "string",
                    "example": "MG"
                  },
                  "city": {
                    "type": "string",
                    "example": "Belo Horizonte"
                  },
                  "region": {
                    "type": "string",
                    "example": "nome da region"
                  },
                  "price_per_region": {
                    "type": "number",
                    "example": 5.23
                  },
                  "days_shipping_deadline": {
                    "type": "number",
                    "example": 4
                  },
                  "hours_shipping_deadline": {
                    "type": "string",
                    "example": 18
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "este endpo"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "409": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409-Response-Conflito"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Listar regioẽs de frete",
        "description": "recebe como retorno da requisição, uma lista de objetos contando regiões de frete disponíveis",
        "tags": [
          "SHIPPING-REGION"
        ],
        "responses": {
          "200": {
            "description": "retorna um body com uma lista de regioes de frete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shop_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "state": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "city": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "region": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "price_per_region": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "days_shipping_deadline": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "hours_shipping_deadlinei": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "UUID"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping-regions/search": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "SHIPPING-REGION"
        ],
        "summary": "Listar regiões de frete com paginção ",
        "description": "Retorna lista de objetos com opções de paginação na query",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "field",
            "schema": {
              "type": "string"
            },
            "example": "escolher um > 'state', 'city', 'region', 'price'"
          },
          {
            "in": "query",
            "required": true,
            "name": "values",
            "schema": {
              "type": "string"
            },
            "example": null
          },
          {
            "in": "query",
            "required": true,
            "name": "price_per_region",
            "schema": {
              "type": "string"
            },
            "example": null
          },
          {
            "in": "query",
            "required": true,
            "name": "page",
            "schema": {
              "type": "string"
            },
            "example": null
          }
        ],
        "responses": {
          "200": {
            "description": "retorna um body com uma lista de regioes de frete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shop_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "state": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "city": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "region": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "price_per_region": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "days_shipping_deadline": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "hours_shipping_deadlinei": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "UUID"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipping-regions/{id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Atualizar Região de frete |  ( credencial de lojista )",
        "description": "asd",
        "tags": [
          "SHIPPING-REGION"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "example": "UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "state": {
                    "type": "string",
                    "example": "BA"
                  },
                  "city": {
                    "type": "string",
                    "example": "Salvador"
                  },
                  "region": {
                    "type": "string",
                    "example": "nome da região"
                  },
                  "price_per_region": {
                    "type": "number",
                    "example": "preço por região"
                  },
                  "days_shipping_deadline": {
                    "type": "number",
                    "example": 4
                  },
                  "hours_shipping_deadline": {
                    "type": "string",
                    "example": "18h"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna um body com uma lista de regioes de frete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "state": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "city": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "region": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "price_per_region": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "days_shipping_deadline": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "hours_shipping_deadlinei": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "UUID"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletar Região de frete",
        "description": "Deleta uma regiao através do ID",
        "tags": [
          "SHIPPING-REGION"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "example": "UUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se deletado com sucesso:",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Deleted"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403-Response-Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/store-delivery/registerSenderAddress": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "criar um Sender |  ( credencial de lojista )",
        "description": "cria um endereço de onde o objeto vai sair",
        "tags": [
          "FRETE"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "street": {
                    "type": "string",
                    "example": "Rua Chique"
                  },
                  "number": {
                    "type": "string",
                    "example": "346"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "Lourdes"
                  },
                  "complementary_address?": {
                    "type": "string",
                    "example": "a"
                  },
                  "city": {
                    "type": "string",
                    "example": "Belo Horizonte"
                  },
                  "state": {
                    "type": "string",
                    "example": "Minas Gerais"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "31310234"
                  },
                  "address_owner": {
                    "type": "string",
                    "example": "'SHOPPER' ou 'SHOP'"
                  },
                  "is_active": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Body com um Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shopper_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "street": {
                      "type": "string",
                      "example": "string"
                    },
                    "number": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "string"
                    },
                    "complementary_address": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "city": {
                      "type": "string",
                      "example": "string"
                    },
                    "state": {
                      "type": "string",
                      "example": "string"
                    },
                    "zip_code": {
                      "type": "string",
                      "example": "string"
                    },
                    "address_owner": {
                      "type": "string",
                      "example": "SHOPPER ou SHOP"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "TimeStamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "Timestamp"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/store-delivery/registerStoreSetupDelivery": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "FRETE"
        ],
        "summary": "criar |  ( credencial de lojista )",
        "description": "asd",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "price_per_mileage": {
                    "type": "number",
                    "example": 4
                  },
                  "days_shipping_deadline": {
                    "type": "number",
                    "example": 4
                  },
                  "hour_shipping_deadline": {
                    "type": "string",
                    "example": "18h"
                  },
                  "shipping_type": {
                    "type": "string",
                    "example": "ShippingType"
                  },
                  "shop_sender_address_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna uma politica de envio da loja",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "price_per_mileage": {
                      "type": "number",
                      "example": 7
                    },
                    "days_shipping_deadline": {
                      "type": "number",
                      "example": 4
                    },
                    "hour_shipping_deadline": {
                      "type": "string",
                      "example": "18h"
                    },
                    "shipping_type": {
                      "type": "string",
                      "example": "MANUAL ou MILEAGE"
                    },
                    "shop_sender_address_id": {
                      "type": "string",
                      "example": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "timestamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "timestamp"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/store-delivery/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Listar endereços por id de loja",
        "description": "asd",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id"
          }
        ],
        "tags": [
          "FRETE"
        ],
        "responses": {
          "200": {
            "description": "volta uma lista de Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shopper_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shop_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "street": {
                        "type": "string",
                        "example": "string"
                      },
                      "number": {
                        "type": "string",
                        "example": "string | null"
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "string"
                      },
                      "complementary_address": {
                        "type": "string",
                        "example": "string | null"
                      },
                      "city": {
                        "type": "string",
                        "example": "string"
                      },
                      "state": {
                        "type": "string",
                        "example": "string"
                      },
                      "zip_code": {
                        "type": "string",
                        "example": "string"
                      },
                      "address_owner": {
                        "type": "string",
                        "example": "SHOPPER ou SHOP"
                      },
                      "is_active": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "TimeStamp"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "Timestamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "deletar endereço com um id",
        "description": "enviar o id no path para deletar",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id"
          }
        ],
        "tags": [
          "FRETE"
        ],
        "responses": {
          "200": {
            "description": "volta uma lista de Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "o que aconteceu"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "atualizar endereço por id",
        "description": "mandar um body com o conteúdo para atualizar",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id"
          }
        ],
        "tags": [
          "FRETE"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shop_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "street": {
                    "type": "string",
                    "example": "string"
                  },
                  "number": {
                    "type": "string",
                    "example": "string"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "string"
                  },
                  "complementary_address?": {
                    "type": "string",
                    "example": "string"
                  },
                  "city": {
                    "type": "string",
                    "example": "strings"
                  },
                  "state": {
                    "type": "string",
                    "example": "string"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "31310123"
                  },
                  "address_owner": {
                    "type": "string",
                    "example": "SHOPPER ou SHOP"
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "volta um Address atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shopper_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "street": {
                      "type": "string",
                      "example": "string"
                    },
                    "number": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "string"
                    },
                    "complementary_address": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "city": {
                      "type": "string",
                      "example": "string"
                    },
                    "state": {
                      "type": "string",
                      "example": "string"
                    },
                    "zip_code": {
                      "type": "string",
                      "example": "string"
                    },
                    "address_owner": {
                      "type": "string",
                      "example": "SHOPPER ou SHOP"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "TimeStamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "Timestamp"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/update/shipping-packaging/{id}": {
      "post": {
        "summary": "route to edit value of dimensions Shipping packaging",
        "description": "route to edit dimensions (height / width / length) Shipping packaging",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "example": "UUID do product_item"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_packaging_height": {
                    "type": "number",
                    "example": 8.7
                  },
                  "shipping_packaging_width": {
                    "type": "number",
                    "example": 4.5
                  },
                  "shipping_packaging_length": {
                    "type": "number",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retornará um body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "d1e90c98-3d9d-4945-b60f-c4c98fd9a932"
                    },
                    "name": {
                      "type": "string",
                      "example": "name teste"
                    },
                    "shipping_packaging_height": {
                      "type": "number",
                      "example": 8.7
                    },
                    "shipping_packaging_width": {
                      "type": "number",
                      "example": 4.5
                    },
                    "shipping_packaging_length": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/status/{id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "alterar o status do produto |  ( credencial de lojista )",
        "description": "pode alterar o status de um produto para ATIVO ou INATIVO na propriedade > <strong>status</strong>",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "example": "UUID do produto"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "INACTIVE or ACTIVE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/add/favorite/{shop_id}/{product_item_id}": {
      "patch": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "alterar o statatus de favorito do produto |  ( credencial de lojista ) ",
        "description": "pode alterar o status de um produto para true ou false na propriedade > <strong>status</strong>",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "product_item_id",
            "schema": {
              "example": "UUID do item de produto"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da loja"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna um boolean",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400-Response-Bad-Request"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "buscar todos os product items",
        "description": "buscar todos os product items  pelo id da loja (shop_id)",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "example": "UUID do produto"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "page",
            "schema": {
              "example": "pagina a ser encontrada"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "search",
            "schema": {
              "example": "nome do produto a ser encontrado"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "orderBy",
            "schema": {
              "example": "ordernar por: 'amount' | 'category' | 'name' | 'created_at'"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna uma lista de products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shop_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "subcategory_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Object Name"
                      },
                      "description": {
                        "type": "string",
                        "example": "Object description"
                      },
                      "details": {
                        "type": "string",
                        "example": "Details"
                      },
                      "status": {
                        "type": "string",
                        "example": "Active"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "timestamp"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "timestamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/get/all/product/item/variations/{product_id}": {
      "get": {
        "summary": "buscar todos os product items de um produto",
        "description": "buscar todos os product items de um produto ({product_id})",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "product_id",
            "schema": {
              "example": "UUID do produto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna uma lista de products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Object Name"
                      },
                      "amount": {
                        "type": "number",
                        "example": 9.99
                      },
                      "cashback": {
                        "type": "string"
                      },
                      "cashback_type": {
                        "type": "string",
                        "example": "PERCENTAGE"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      },
                      "total_stock": {
                        "type": "number",
                        "example": 130
                      },
                      "unit_type": {
                        "type": "string",
                        "example": "UN"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "product_items_variations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_variations_options": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "example": "descrição teste"
                                }
                              }
                            }
                          }
                        }
                      },
                      "product_items_images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "image_url": {
                              "type": "string",
                              "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/1673414404695"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/get/product/item/{product_item_id}": {
      "get": {
        "summary": "buscar o item de um produto",
        "description": "buscar o item especifico de um produto pelo {product_item_id}",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "product_item_id",
            "schema": {
              "example": "UUID do item do produto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna uma lista de products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Object Name"
                      },
                      "amount": {
                        "type": "number",
                        "example": 9.99
                      },
                      "cashback": {
                        "type": "string",
                        "example": 1
                      },
                      "cashback_type": {
                        "type": "string",
                        "example": "PERCENTAGE"
                      },
                      "status": {
                        "type": "string",
                        "example": "ACTIVE"
                      },
                      "total_stock": {
                        "type": "number",
                        "example": 130
                      },
                      "unit_type": {
                        "type": "string",
                        "example": "UN"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "product_items_variations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_variations_options": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "example": "descrição teste"
                                }
                              }
                            }
                          }
                        }
                      },
                      "product_items_images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "image_url": {
                              "type": "string",
                              "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/1673414404695"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-items/get/all/product/item/highlights/{shop_id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "buscar todos os product items favoritos",
        "description": "buscar todos os product items favoritos  pelo id da loja (shop_id)",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da shop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna uma lista de products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "shop_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "subcategory_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "name": {
                        "type": "string",
                        "example": "Object Name"
                      },
                      "description": {
                        "type": "string",
                        "example": "Object description"
                      },
                      "details": {
                        "type": "string",
                        "example": "Details"
                      },
                      "status": {
                        "type": "string",
                        "example": "Active"
                      },
                      "created_at": {
                        "type": "string",
                        "example": "timestamp"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "timestamp"
                      },
                      "products_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "sku": {
                        "type": "string",
                        "example": null
                      },
                      "amount": {
                        "type": "number",
                        "example": 123
                      },
                      "unit_type": {
                        "type": "string",
                        "example": "UN"
                      },
                      "minimum_item_measurement": {
                        "type": "number",
                        "example": 10
                      },
                      "cashback": {
                        "type": "string",
                        "example": null
                      },
                      "cashback_type": {
                        "type": "string",
                        "example": "PERCENTAGE"
                      },
                      "cashback_due_date": {
                        "type": "string",
                        "example": null
                      },
                      "total_stock": {
                        "type": "number",
                        "example": 150
                      },
                      "stock_minimum": {
                        "type": "number",
                        "example": null
                      },
                      "is_favorite": {
                        "type": "boolean",
                        "example": true
                      },
                      "product_item_id": {
                        "type": "string",
                        "example": "UUID"
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://develop-qesh1.s3.amazonaws.com/ecommerce/sales/1670344197032"
                      },
                      "main_image": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404-shop-Not-Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "deletar um product items",
        "description": "deletar um product items pelo id",
        "tags": [
          "PRODUCT ITEMS"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID para deletar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "retorna um boolean true para deletado e falase para não deletado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/address": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "ADDRESS"
        ],
        "summary": "criar um endereço |  ( credencial de lojista )",
        "description": "cria um novo endereço",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "shopper_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "shop_id": {
                    "type": "string",
                    "example": "UUID"
                  },
                  "street": {
                    "type": "string",
                    "example": "string"
                  },
                  "number": {
                    "type": "string",
                    "example": "string | null"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "string"
                  },
                  "complementary_address": {
                    "type": "string",
                    "example": "string | null"
                  },
                  "city": {
                    "type": "string",
                    "example": "string"
                  },
                  "state": {
                    "type": "string",
                    "example": "string"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "string"
                  },
                  "address_owner": {
                    "type": "string",
                    "example": "SHOPPER ou SHOP"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string",
                    "example": "TimeStamp"
                  },
                  "updated_at": {
                    "type": "string",
                    "example": "Timestamp"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "retorna uma politica de envio da loja",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shopper_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "UUID"
                    },
                    "street": {
                      "type": "string",
                      "example": "string"
                    },
                    "number": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "string"
                    },
                    "complementary_address": {
                      "type": "string",
                      "example": "string | null"
                    },
                    "city": {
                      "type": "string",
                      "example": "string"
                    },
                    "state": {
                      "type": "string",
                      "example": "string"
                    },
                    "zip_code": {
                      "type": "string",
                      "example": "string"
                    },
                    "address_owner": {
                      "type": "string",
                      "example": "SHOPPER ou SHOP"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string",
                      "example": "TimeStamp"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "Timestamp"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500-response-internal-server-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopping_card/:shop_id?:product_id": {
      "get": {
        "tags": [
          "shopping_card"
        ],
        "summary": "Buscar todos os produtos do carrinho de compras.",
        "description": "Essa rota buscar informações de um produto pelo o id da loja e id da variação do produto. <br/> Para conseguir buscar as informações você tem que informar o id da loja é de todos os ids dos produtos que estão no carrinho.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "shop_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "description": "Esse parametro aceita mais de um id por vez. Passe todos os IDS dos produtos que queira buscar separados por & ",
            "required": true,
            "name": "product_item_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informações dos produtos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Blusa azul"
                    },
                    "subcategory": {
                      "type": "string",
                      "example": "roupa"
                    },
                    "cashback": {
                      "type": "string",
                      "example": "null"
                    },
                    "image_url": {
                      "type": "string",
                      "example": "www.urldafoto.com"
                    },
                    "amount": {
                      "type": "string",
                      "example": "54"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Não foi encontrado nenhuma loja com o ID informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: store id not found "
                        ],
                        "code": "error.shopping-cart.not-found.error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/update-phone": {
      "patch": {
        "tags": [
          "SHOPPER"
        ],
        "description": "Essa rota engloba toda a regra de negocio para atualizar o telefone do usuario.",
        "summary": "Atualizar telefone do usuario.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_phone": {
                    "type": "string",
                    "example": "31999999999"
                  },
                  "new_phone": {
                    "type": "string",
                    "example": "31999999999"
                  },
                  "password": {
                    "type": "string",
                    "example": "lkmi2i4239"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o novo telefone.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "new_phone": {
                      "type": "string",
                      "example": "313999999999"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Retorna esse erro quando o telefone ou a senha estão errados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "tpye": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: The user is not authorized"
                        ],
                        "code": "error.shopper.forbidden-resource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/update-email": {
      "patch": {
        "tags": [
          "SHOPPER"
        ],
        "description": "Essa rota é responsavel por atualizar o email do comprador",
        "summary": "Atualizar email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_email": {
                    "type": "string",
                    "example": "kaic.mendes@qesh.ai"
                  },
                  "new_email": {
                    "type": "string",
                    "example": "kaic.silva@qesh.ai"
                  },
                  "passowrd": {
                    "type": "string",
                    "example": "Kaic@123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o novo email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "new_email": {
                      "type": "string",
                      "example": "kaic.silva@qesh.ai"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Retorna esse erro quando o email ou a senha estão errados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "tpye": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: The user is not authorized"
                        ],
                        "code": "error.shopper.forbidden-resource"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/address": {
      "post": {
        "tags": [
          "SHOPPER"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da loja"
            }
          }
        ],
        "description": "Essa rota é responsavel por criar um novo endereço vinculado com o comprador",
        "summary": "Criar novo endereço",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "rua alvarenga"
                  },
                  "number": {
                    "type": "string",
                    "example": "432"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "opcional"
                  },
                  "complementary_address": {
                    "type": "string",
                    "example": "casa amarela"
                  },
                  "city": {
                    "type": "string",
                    "example": "belo horizonte"
                  },
                  "state": {
                    "type": "string",
                    "example": "Minas Gerais"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "000000000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o novo endereço.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "shopper_id": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "shop_id": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "street": {
                      "type": "string",
                      "example": "rua alvarenga"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "complementary_address": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "city": {
                      "type": "string",
                      "example": "belo horizonte"
                    },
                    "state": {
                      "type": "string",
                      "example": "Minas gerais"
                    },
                    "zip_code": {
                      "type": "string",
                      "example": "000000000"
                    },
                    "address_owner": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "is_active": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Retorna esse erro quando o numero de endereço cadastrados passou de 3.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "tpye": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: The maximum number of registration addresses has passed"
                        ],
                        "code": "error.shopper.competition.conflict"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/address/status": {
      "patch": {
        "tags": [
          "SHOPPER"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da loja"
            }
          }
        ],
        "description": "Essa rota atualiza o status do endereço para qual o produto tem que ser enviado.",
        "summary": "Atualizar entrega do produto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o status atual do endereço.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_id": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    },
                    "current_status": {
                      "type": "boolean",
                      "example": true
                    },
                    "shopper_id": {
                      "type": "string",
                      "example": "fb40ba8e-fdc6-4b25-abdc-dacf160ad629"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Retorna esse erro quando o endereço não foi encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "tpye": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: Provided address not found"
                        ],
                        "code": "error.shopper.not-found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shopper/address/": {
      "patch": {
        "tags": [
          "SHOPPER"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da loja"
            }
          }
        ],
        "description": "Essa rota busca todos os endereço cadastrados pelo comprador.",
        "summary": "Buscar todos os endereço.",
        "responses": {
          "200": {
            "description": "Retorna todos os endereço.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string,",
                      "example": "city"
                    },
                    "neighborhood": {
                      "type": "string,",
                      "example": "neighborhood"
                    },
                    "address_owner": {
                      "type": "string,",
                      "example": "address_owner"
                    },
                    "state": {
                      "type": "string,",
                      "example": "state"
                    },
                    "complementary_address": {
                      "type": "string,",
                      "example": "complementary_address"
                    },
                    "zip_code": {
                      "type": "string,",
                      "example": "zip_code"
                    },
                    "number": {
                      "type": "string,",
                      "example": "number"
                    },
                    "street": {
                      "type": "string,",
                      "example": "street"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Retorna esse erro quando o endereço não foi encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: Provided address not found"
                        ],
                        "code": "error.shopper.not-found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "v1/shopper/address/": {
      "patch": {
        "tags": [
          "SHOPPER"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "required": true,
            "name": "shop_id",
            "schema": {
              "example": "UUID da loja"
            }
          }
        ],
        "description": "Essa rota atualiza  do endereço .",
        "summary": "Atualizar o endereço",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "nome da rua"
                  },
                  "number": {
                    "type": "string",
                    "example": "numero"
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "neighborhood"
                  },
                  "complementary_address": {
                    "type": "string",
                    "example": "complementary_address"
                  },
                  "city": {
                    "type": "string",
                    "example": "cidade"
                  },
                  "state": {
                    "type": "string",
                    "example": "state"
                  },
                  "zip_code": {
                    "type": "string",
                    "example": "cep"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o endereço.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "nome da rua"
                    },
                    "number": {
                      "type": "string",
                      "example": "numero"
                    },
                    "neighborhood": {
                      "type": "string",
                      "example": "neighborhood"
                    },
                    "complementary_address": {
                      "type": "string",
                      "example": "complementary_address"
                    },
                    "city": {
                      "type": "string",
                      "example": "cidade"
                    },
                    "state": {
                      "type": "string",
                      "example": "state"
                    },
                    "zip_code": {
                      "type": "string",
                      "example": "cep"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Retorna esse erro quando o endereço não foi encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "tpye": "object",
                      "example": {
                        "status": true,
                        "messages": [
                          "Error: The specified store id was not found"
                        ],
                        "code": "error.shopper.not-found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ADDRESS",
      "description": "Interface das rotas de Endereço"
    },
    {
      "name": "AUTH",
      "description": "Interface de Autenticação"
    },
    {
      "name": "SHOP",
      "description": "interface das Lojas"
    },
    {
      "name": "SHOPPER",
      "description": "interface de comprador"
    },
    {
      "name": "SHOP OWNER",
      "description": "interface de lojista"
    },
    {
      "name": "MANAGE STOCK",
      "description": "Interface do controle de estoque"
    },
    {
      "name": "PRODUCT",
      "description": "Interface de rotas de Produtos"
    },
    {
      "name": "PRODUCT ITEMS",
      "description": "Interface de rotas de Produtos"
    },
    {
      "name": "PRODUCT CATEGORY",
      "description": "Interface das Categories"
    },
    {
      "name": "PRODUCT SUBCATEGORY",
      "description": "Interface das Subcategories"
    },
    {
      "name": "PRODUCT VARIATION",
      "description": "Interface das Variações de Produto"
    },
    {
      "name": "PRODUCT VARIATION OPTIONS",
      "description": "Interface das Opções de Variações de Produto"
    },
    {
      "name": "SHIPPING-REGION",
      "description": "Interface de Frete"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "400-Response-Bad-Request": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "reason of bad request"
          }
        }
      },
      "403-Response-Forbidden": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "error: Email or password invalid!"
            }
          },
          "code": {
            "type": "string",
            "example": "error.resourcename.forbidden-resource"
          }
        }
      },
      "403-Response-INVALIDCODE": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "error.code.sent.invalid"
            }
          },
          "code": {
            "type": "string",
            "example": "error.resourcename.forbidden-resource"
          }
        }
      },
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "401-Unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "Reason of prohibition"
          }
        }
      },
      "404-Not-Found": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "error: resource does not exist!"
              },
              "code": {
                "type": "string",
                "example": "general.not-found-error"
              }
            }
          }
        }
      },
      "404-shop-Not-Found": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "error: Shop does not exist!"
              },
              "code": {
                "type": "string",
                "example": "general.not-found-error"
              }
            }
          }
        }
      },
      "404-sale-Not-Found": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "error: the informed sale does not exist!"
              },
              "code": {
                "type": "string",
                "example": "general.not-found-error"
              }
            }
          }
        }
      },
      "409-Response-Conflito": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "[error: Document or Email already register!]"
            }
          },
          "code": {
            "type": "string",
            "example": "general.not-found-error"
          }
        }
      },
      "422-Response-Unprocessable_entity": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "[error: Invalid image size, maximum supported: 65335KB]"
            }
          },
          "code": {
            "type": "string",
            "example": "image.size.invalid"
          }
        }
      },
      "500-response-internal-server-error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "true"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "error: internal error, contact an administrator"
            }
          },
          "code": {
            "type": "string",
            "example": "error.internal.server.error"
          }
        }
      },
      "auth_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "algum@email.com.br"
          },
          "password": {
            "type": "string",
            "example": "algumaSenha"
          }
        }
      }
    }
  }
}